@{
    Layout = "_AdminPhysicianHeader";
    ViewData["Active"] = "Records";
    ViewData["SubMenu"] = "Search";
}
<div>
   
    <div class="container-fluid mt-5 ">
        <div class="d-inline-flex align-items-center w-100">
            <div><p class="fw-bold fs-4">Search Records</p></div>
            <div class="flex-grow-1 d-flex justify-content-end">
                <button class="btn btn-info text-white " onclick="ExportToExcel()"><i class="fa-solid fa-share"></i> <span>Export Data To Excel</span></button>
            </div>

        </div>
        <div class="mt-2 p-3  bg-white rounded shadow">
            <form class="searchForm">         
            <div class="row">
                <div class="col-lg-3">
                    <select style="height:55px;" class="form-select mb-3" name="RequestStatus" aria-label="Default select example">
                        <option value="0" selected>Select Request Status</option>
                        <option value="1">New</option>
                        <option value="2">Pending</option>
                        <option value="3">Active</option>
                        <option value="4">Conclude</option>
                        <option value="5">To Close</option>
                        <option value="6">Unpaid</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                            name="PatientName"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Patient Name</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <select style="height:55px;" class="form-select mb-3" name="RequestType" aria-label="Default select example">
                        <option value="0" selected>Select Request Type</option>
                        <option value="1">Business</option>
                        <option value="2">Patient</option>
                        <option value="3">Family&Friend</option>
                        <option value="4">Concierge</option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="date"
                                   name="FromDateOfService"
                               class="form-control dob"
                               placeholder=Suchtext autocomplete=off />
                        <label for="floatingInput">From Date Of Service</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="date"
                                   name="ToDateOfService"
                               class="form-control dob"
                               placeholder=Suchtext autocomplete=off />
                        <label for="floatingInput">To Date Of Service</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                            name="ProviderName"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Provider Name</label>
                    </div>
                </div>
                 <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                            name = "Email"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Email</label>
                    </div>
                </div>
                 <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                            name="Phone"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Phone Number</label>
                    </div>
                </div>

            </div>
         
            <div class="d-inline-flex justify-content-end w-100">
                <button class="btn btn-outline-info me-2" type="reset">Clear</button>
                <button class="btn btn-info text-white ms-2 " type="button" onclick="search()">Search</button>
            </div>
            </form>
            <div id="SearchTable" class="mt-3">

            </div>

            <div id="pagination" class="d-flex flex-row-reverse p-3">
                <div class="d-flex">
                    <button class="btn btn-info text-white pagination_btn first-button">First</button>
                    <button class=" btn btn-light prev-button" disabled><i class="fa-solid fa-arrow-rotate-left"></i> </button>
                    <!-- Pagination buttons container -->
                    <div class="page-buttons"></div>
                    <button class="btn  btn-light  next-button"> <i class="fa-solid fa-arrow-rotate-right"></i> </button>
                    <button  class=" btn btn-info text-white pagination_btn last-button">Last</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var searchobj = $('form.searchForm').serialize();

    $(document).ready(function () {
        $.ajax({
            method: "GET",
            url: "/Admin/GetAllRecords",
            success: function (result) {
                if (result.includes("table")) {
                    $("#SearchTable").html(result);
                    setupPagination(5, ".tableRow")
                    setupPagination(5, ".accordion")
                    $(document).on('click', ".Export", ExportToExcel);


                } else {
                    window.location.reload();
                }

            }
        });

        $(document).on('click', ".deletebtn", DeleteRequest);

    });

    
    function search(){
        searchobj = $('form.searchForm').serialize();
        $.ajax({
            method: "POST",
            url: "/Admin/GetRecordsBySearch",
            data: $('form.searchForm').serialize(),
            success: function (result) {
                if (result.includes("table")) {
                    $("#SearchTable").html(result);
                    setupPagination(5, ".tableRow")
                    setupPagination(5, ".accordion")

                } else {
                    window.location.reload();
                }
            }

        });
    } 
    
    
    function ExportToExcel() {
        $.ajax({
            method: "GET",
            url: "/Admin/ExportSearchRecords",
            data: searchobj ,
            contentType: "application/json; charset=utf-8",
            xhrFields: {
                responseType: 'blob' // Important for binary data
            },
            success: function (data) {
                var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                var url = window.URL.createObjectURL(blob);

                // Create a temporary link and trigger download
                var a = document.createElement('a');
                a.href = url;
                a.download = 'SearchRecords.xlsx';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            },
            error : function(result){
                alert("There is no data available to export");
            }
        });

    }
   
    function DeleteRequest(){
        var reqid = $(this).data("reqid");
        $.ajax({
            method: "GET",
            url: "/Admin/DeleteRequestPermanently",
            data: { reqid: reqid },
            success: function (result) {
                alert("Request data is deleted permanently");
                window.location.reload();


            }
        });
    }

    function setupPagination(items, classname) {
        const itemsPerPage = items;
        let currentPage = 1;
        let totalPages = Math.ceil($(classname).length / itemsPerPage);

        const maxPageButtons = 3;
        let startPage = 1;

        function showRowsForPage(page) {

            const startIndex = (page - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

         
            ("startindex=" +startIndex);
         
            $(classname).hide();

            $(classname).slice(startIndex, endIndex).show();



        }

        function generatePaginationButtons() {
            $('.page-buttons').empty();
            let endPage = Math.min(totalPages, startPage + maxPageButtons - 1);
            for (let i = startPage; i <= endPage; i++) {
                const buttonClass = (i === currentPage) ? 'page-button btn btn-outline-info ms-2 current-page' : 'page-button btn-outline-info ms-2  btn ';
                $('.page-buttons').append(`<button class="${buttonClass}" data-page="${i}">${i}</button>`);
            }
        }
        function navigateToPage(page) {
            currentPage = page;
            startPage = Math.max(currentPage - Math.floor(maxPageButtons / 2), 1);
            showRowsForPage(currentPage);
            generatePaginationButtons();
            updateButtonStates();
        }

        $('.next-button').on('click', function () {
            if (currentPage < totalPages) {
                navigateToPage(currentPage + 1);
            }
        });

        $('.prev-button').on('click', function () {
            if (currentPage > 1) {
                navigateToPage(currentPage - 1);
            }
        });

        $('.first-button').on('click', function () {
            navigateToPage(1);
        });

        $('.last-button').on('click', function () {
            navigateToPage(totalPages);
        });

        $(document).on('click', '.page-button', function () {
            const page = $(this).data('page');
            navigateToPage(page);
        });

        function updateButtonStates() {
            $('.prev-button').prop('disabled', currentPage === 1);
            $('.next-button').prop('disabled', currentPage === totalPages);
        }

        // Initialize page with first set of rows and pagination buttons
        showRowsForPage(currentPage);
        generatePaginationButtons();
        updateButtonStates();
    }
</script>

   