@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_AdminPhysicianHeader";
    ViewData["Active"] = "Records";
    ViewData["SubMenu"] = "Histroy";
}

<div>
   
    <div class="container-fluid mt-4">
        <div>
            <p class="fw-bold fs-4">Patient History</p>
        </div>
        <div class="bg-white rounded shadow ">
            <form class="searchForm">

            <div class="p-2 row">
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                               name="FirstName"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">First Name</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                               name="LastName"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Last Name</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                               name="Email"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Email</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-floating mb-3">
                        <input type="text"
                               name="Phone"
                               class="form-control input"
                               placeholder="name@example.com" />
                        <label for="floatingInput">Phone Number</label>
                    </div>
                </div>
            </div>
                <div class="d-inline-flex justify-content-end align-items-center w-100">
                    <button class="btn btn-outline-info ms-2 me-2" type="reset">Clear</button>
                    <button class="btn btn-info text-white ms-2 me-2" type="button" onclick="search()">Search</button>
                </div>
            </form>
            <div id="PatientHistroyTable" class="mt-3">
            </div>
            <div id="pagination" class="d-flex flex-row-reverse p-3">
                <div class="d-flex">
                    <button class="btn btn-info text-white pagination_btn first-button">First</button>
                    <button class=" btn btn-light prev-button" disabled><i class="fa-solid fa-arrow-rotate-left"></i> </button>
                    <!-- Pagination buttons container -->
                    <div class="page-buttons"></div>
                    <button class="btn  btn-light  next-button"> <i class="fa-solid fa-arrow-rotate-right"></i> </button>
                    <button class=" btn btn-info text-white pagination_btn last-button">Last</button>
                </div>
            </div>
        </div>
        
       

       
    </div>
</div>

<script>
  
    $(document).ready(function () {
        $.ajax({
            method: "GET",
            url: "/Admin/GetAllPatients",
            success: function (result) {
                if (result.includes("table")) {
                    $("#PatientHistroyTable").html(result);
                    setupPagination(5, ".tableRow")
                    setupPagination(5, ".accordion")


                } else {
                    window.location.reload();
                }

            }
        });


    });
    function search(){
        $.ajax({
            method: "GET",
            url: "/Admin/GetPatientBySearch",
            data: $('form.searchForm').serialize(),
            success: function (result) {
                if (result.includes("table")) {
                    $("#PatientHistroyTable").html(result);
                    setupPagination(5, ".tableRow")
                    setupPagination(5, ".accordion")


                } else {
                    window.location.reload();
                }

            }
        });

    }

    function setupPagination(items, classname) {
        const itemsPerPage = items;
        let currentPage = 1;
        let totalPages = Math.ceil($(classname).length / itemsPerPage);

        const maxPageButtons = 3;
        let startPage = 1;

        function showRowsForPage(page) {

            const startIndex = (page - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            $(classname).hide();

            $(classname).slice(startIndex, endIndex).show();

        }

        function generatePaginationButtons() {
            $('.page-buttons').empty();
            let endPage = Math.min(totalPages, startPage + maxPageButtons - 1);
            for (let i = startPage; i <= endPage; i++) {
                const buttonClass = (i === currentPage) ? 'page-button btn btn-outline-info ms-2 current-page' : 'page-button btn-outline-info ms-2  btn ';
                $('.page-buttons').append(`<button class="${buttonClass}" data-page="${i}">${i}</button>`);
            }
        }
        function navigateToPage(page) {
            currentPage = page;
            startPage = Math.max(currentPage - Math.floor(maxPageButtons / 2), 1);
            showRowsForPage(currentPage);
            generatePaginationButtons();
            updateButtonStates();
        }

        $('.next-button').on('click', function () {
            if (currentPage < totalPages) {
                navigateToPage(currentPage + 1);
            }
        });

        $('.prev-button').on('click', function () {
            if (currentPage > 1) {
                navigateToPage(currentPage - 1);
            }
        });

        $('.first-button').on('click', function () {
            navigateToPage(1);
        });

        $('.last-button').on('click', function () {
            navigateToPage(totalPages);
        });

        $(document).on('click', '.page-button', function () {
            const page = $(this).data('page');
            navigateToPage(page);
        });

        function updateButtonStates() {
            $('.prev-button').prop('disabled', currentPage === 1);
            $('.next-button').prop('disabled', currentPage === totalPages);
        }

        // Initialize page with first set of rows and pagination buttons
        showRowsForPage(currentPage);
        generatePaginationButtons();
        updateButtonStates();
    }

</script>
